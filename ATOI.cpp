class Solution 
{
public:
    int myAtoi(string s) 
        {
            int res = 0; // ответ
            bool negative = 0; // индикатор отрицательного числа
            int sit = 0; // string iterator
            
            while((s[sit] == ' ') && (sit < s.size())) sit++; // игнорируем пробелы

            if((s[sit] == '-') || (s[sit] == '+')) // если был знак
                {
                    if((48 > s[sit+1]) || (s[sit+1] > 57)) return 0;// если следующий символ не число то возвращаем ноль.
                    negative = (s[sit] == '-'); //если минус то запоминаем.
                    sit++; // шаг
                }

            while((47 < s[sit]) && (s[sit] < 58)) // пока символ это цифра
                {
                    if(res < 214748364) // если ответ меньше максимального на данном этапе
                        {
                            res = ((res*10) + (s[sit] - 48)); // добавляем цифру к ответу
                        }
                        else if(res > 214748364) return ((negative)? -2147483648 : 2147483647); //если ответ меньше максимального на данном этапе возвращаем экстремум
                                else // res == 214748364 последнюю цифру можно добавить если это не 9 для отрицательного ответа и не больше 8 для положительного. 
                                    {
                                        if (negative)
                                            { 
                                                if(s[sit] > 55) return -2147483648; // если цифра больше 7 (8 или 9) то возвращаем максимальное отрицательное число -2147483648
                                            }
                                            else
                                                {
                                                    if(s[sit] > 54) return 2147483647; // если цифра больше 6 (7, 8 или 9) то возвращаем максимальное положительное число 2147483647
                                                }
                                        res = ((res*10) + (s[sit] - 48)); //в остальных случаях (0,1,2,3,4,5,6) стоит добавить последнюю цифру.  
                                    };
                    if((sit + 1) < s.size()) sit++;// шаг 
                        else {
                                return ((negative)? (res * (-1)) : res ); // возвращаем ответ.
                                break;  
                             } 
                }
            return ((negative)? (res * (-1)) : res ); // возвращаем ответ.
        };
};
